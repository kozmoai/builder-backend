// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.6.1
// source: cursor-sync.proto

package websocket

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Signal int32

const (
	Signal_SIGNAL_PING                   Signal = 0
	Signal_SIGNAL_ENTER                  Signal = 1
	Signal_SIGNAL_LEAVE                  Signal = 2
	Signal_SIGNAL_CREATE_STATE           Signal = 3
	Signal_SIGNAL_DELETE_STATE           Signal = 4
	Signal_SIGNAL_UPDATE_STATE           Signal = 5
	Signal_SIGNAL_MOVE_STATE             Signal = 6
	Signal_SIGNAL_CREATE_OR_UPDATE_STATE Signal = 7
	Signal_SIGNAL_BROADCAST_ONLY         Signal = 8
	Signal_SIGNAL_PUT_STATE              Signal = 9
	Signal_SIGNAL_GLOBAL_BROADCAST_ONLY  Signal = 10
	Signal_SIGNAL_COOPERATE_ATTACH       Signal = 11
	Signal_SIGNAL_COOPERATE_DISATTACH    Signal = 12
	Signal_SIGNAL_MOVE_CURSOR            Signal = 13
)

// Enum value maps for Signal.
var (
	Signal_name = map[int32]string{
		0:  "SIGNAL_PING",
		1:  "SIGNAL_ENTER",
		2:  "SIGNAL_LEAVE",
		3:  "SIGNAL_CREATE_STATE",
		4:  "SIGNAL_DELETE_STATE",
		5:  "SIGNAL_UPDATE_STATE",
		6:  "SIGNAL_MOVE_STATE",
		7:  "SIGNAL_CREATE_OR_UPDATE_STATE",
		8:  "SIGNAL_BROADCAST_ONLY",
		9:  "SIGNAL_PUT_STATE",
		10: "SIGNAL_GLOBAL_BROADCAST_ONLY",
		11: "SIGNAL_COOPERATE_ATTACH",
		12: "SIGNAL_COOPERATE_DISATTACH",
		13: "SIGNAL_MOVE_CURSOR",
	}
	Signal_value = map[string]int32{
		"SIGNAL_PING":                   0,
		"SIGNAL_ENTER":                  1,
		"SIGNAL_LEAVE":                  2,
		"SIGNAL_CREATE_STATE":           3,
		"SIGNAL_DELETE_STATE":           4,
		"SIGNAL_UPDATE_STATE":           5,
		"SIGNAL_MOVE_STATE":             6,
		"SIGNAL_CREATE_OR_UPDATE_STATE": 7,
		"SIGNAL_BROADCAST_ONLY":         8,
		"SIGNAL_PUT_STATE":              9,
		"SIGNAL_GLOBAL_BROADCAST_ONLY":  10,
		"SIGNAL_COOPERATE_ATTACH":       11,
		"SIGNAL_COOPERATE_DISATTACH":    12,
		"SIGNAL_MOVE_CURSOR":            13,
	}
)

func (x Signal) Enum() *Signal {
	p := new(Signal)
	*p = x
	return p
}

func (x Signal) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Signal) Descriptor() protoreflect.EnumDescriptor {
	return file_cursor_sync_proto_enumTypes[0].Descriptor()
}

func (Signal) Type() protoreflect.EnumType {
	return &file_cursor_sync_proto_enumTypes[0]
}

func (x Signal) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Signal.Descriptor instead.
func (Signal) EnumDescriptor() ([]byte, []int) {
	return file_cursor_sync_proto_rawDescGZIP(), []int{0}
}

type Target int32

const (
	Target_TARGET_NOTHING            Target = 0 // placeholder for nothing
	Target_TARGET_COMPONENTS         Target = 1 // ComponentsState
	Target_TARGET_DEPENDENCIES       Target = 2 // DependenciesState
	Target_TARGET_DRAG_SHADOW        Target = 3 // DragShadowState
	Target_TARGET_DOTTED_LINE_SQUARE Target = 4 // DottedLineSquareState
	Target_TARGET_DISPLAY_NAME       Target = 5 // DisplayNameState
	Target_TARGET_APPS               Target = 6 // only for broadcast
	Target_TARGET_RESOURCE           Target = 7 // only for broadcast
	Target_TARGET_ACTION             Target = 8 // only for broadcast
	Target_TARGET_CURSOR             Target = 9 // only for broadcast
)

// Enum value maps for Target.
var (
	Target_name = map[int32]string{
		0: "TARGET_NOTHING",
		1: "TARGET_COMPONENTS",
		2: "TARGET_DEPENDENCIES",
		3: "TARGET_DRAG_SHADOW",
		4: "TARGET_DOTTED_LINE_SQUARE",
		5: "TARGET_DISPLAY_NAME",
		6: "TARGET_APPS",
		7: "TARGET_RESOURCE",
		8: "TARGET_ACTION",
		9: "TARGET_CURSOR",
	}
	Target_value = map[string]int32{
		"TARGET_NOTHING":            0,
		"TARGET_COMPONENTS":         1,
		"TARGET_DEPENDENCIES":       2,
		"TARGET_DRAG_SHADOW":        3,
		"TARGET_DOTTED_LINE_SQUARE": 4,
		"TARGET_DISPLAY_NAME":       5,
		"TARGET_APPS":               6,
		"TARGET_RESOURCE":           7,
		"TARGET_ACTION":             8,
		"TARGET_CURSOR":             9,
	}
)

func (x Target) Enum() *Target {
	p := new(Target)
	*p = x
	return p
}

func (x Target) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Target) Descriptor() protoreflect.EnumDescriptor {
	return file_cursor_sync_proto_enumTypes[1].Descriptor()
}

func (Target) Type() protoreflect.EnumType {
	return &file_cursor_sync_proto_enumTypes[1]
}

func (x Target) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Target.Descriptor instead.
func (Target) EnumDescriptor() ([]byte, []int) {
	return file_cursor_sync_proto_rawDescGZIP(), []int{1}
}

type MovingMessageBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal            Signal  `protobuf:"varint,1,opt,name=signal,proto3,enum=tutorial.Signal" json:"signal,omitempty"` // see package websocket const define
	Target            Target  `protobuf:"varint,2,opt,name=target,proto3,enum=tutorial.Target" json:"target,omitempty"` //
	ClientID          string  `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"`                   // message sender client ID
	NeedBroadcast     bool    `protobuf:"varint,4,opt,name=needBroadcast,proto3" json:"needBroadcast,omitempty"`
	UserID            string  `protobuf:"bytes,5,opt,name=userID,proto3" json:"userID,omitempty"`                       // message sender user ID
	Nickname          string  `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`                   // message sender user ID
	Status            int32   `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                      // set instance to status, 0 for empty status
	ParentDisplayName string  `protobuf:"bytes,8,opt,name=parentDisplayName,proto3" json:"parentDisplayName,omitempty"` // parent component displayname
	DisplayNames      string  `protobuf:"bytes,9,opt,name=displayNames,proto3" json:"displayNames,omitempty"`           // message affected component display names, separate with comma ","
	CursorXInteger    uint32  `protobuf:"varint,10,opt,name=cursorXInteger,proto3" json:"cursorXInteger,omitempty"`     // cursor's position with dot number
	CursorYInteger    uint32  `protobuf:"varint,11,opt,name=cursorYInteger,proto3" json:"cursorYInteger,omitempty"`     // cursor's position with dot number
	CursorXMod        float32 `protobuf:"fixed32,12,opt,name=cursorXMod,proto3" json:"cursorXMod,omitempty"`            // cursor's position with dot number
	CursorYMod        float32 `protobuf:"fixed32,13,opt,name=cursorYMod,proto3" json:"cursorYMod,omitempty"`            // cursor's position with dot number
	WidgetX           uint32  `protobuf:"varint,14,opt,name=widgetX,proto3" json:"widgetX,omitempty"`                   // widget'position with dot number
	WidgetY           uint32  `protobuf:"varint,15,opt,name=widgetY,proto3" json:"widgetY,omitempty"`                   // widget'position with dot number
	WidgetW           uint32  `protobuf:"varint,16,opt,name=widgetW,proto3" json:"widgetW,omitempty"`                   // widget'shape with dot number
	WidgetH           uint32  `protobuf:"varint,17,opt,name=widgetH,proto3" json:"widgetH,omitempty"`                   // widget'shape with dot number
}

func (x *MovingMessageBin) Reset() {
	*x = MovingMessageBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cursor_sync_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovingMessageBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovingMessageBin) ProtoMessage() {}

func (x *MovingMessageBin) ProtoReflect() protoreflect.Message {
	mi := &file_cursor_sync_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovingMessageBin.ProtoReflect.Descriptor instead.
func (*MovingMessageBin) Descriptor() ([]byte, []int) {
	return file_cursor_sync_proto_rawDescGZIP(), []int{0}
}

func (x *MovingMessageBin) GetSignal() Signal {
	if x != nil {
		return x.Signal
	}
	return Signal_SIGNAL_PING
}

func (x *MovingMessageBin) GetTarget() Target {
	if x != nil {
		return x.Target
	}
	return Target_TARGET_NOTHING
}

func (x *MovingMessageBin) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *MovingMessageBin) GetNeedBroadcast() bool {
	if x != nil {
		return x.NeedBroadcast
	}
	return false
}

func (x *MovingMessageBin) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MovingMessageBin) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MovingMessageBin) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MovingMessageBin) GetParentDisplayName() string {
	if x != nil {
		return x.ParentDisplayName
	}
	return ""
}

func (x *MovingMessageBin) GetDisplayNames() string {
	if x != nil {
		return x.DisplayNames
	}
	return ""
}

func (x *MovingMessageBin) GetCursorXInteger() uint32 {
	if x != nil {
		return x.CursorXInteger
	}
	return 0
}

func (x *MovingMessageBin) GetCursorYInteger() uint32 {
	if x != nil {
		return x.CursorYInteger
	}
	return 0
}

func (x *MovingMessageBin) GetCursorXMod() float32 {
	if x != nil {
		return x.CursorXMod
	}
	return 0
}

func (x *MovingMessageBin) GetCursorYMod() float32 {
	if x != nil {
		return x.CursorYMod
	}
	return 0
}

func (x *MovingMessageBin) GetWidgetX() uint32 {
	if x != nil {
		return x.WidgetX
	}
	return 0
}

func (x *MovingMessageBin) GetWidgetY() uint32 {
	if x != nil {
		return x.WidgetY
	}
	return 0
}

func (x *MovingMessageBin) GetWidgetW() uint32 {
	if x != nil {
		return x.WidgetW
	}
	return 0
}

func (x *MovingMessageBin) GetWidgetH() uint32 {
	if x != nil {
		return x.WidgetH
	}
	return 0
}

var File_cursor_sync_proto protoreflect.FileDescriptor

var file_cursor_sync_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2d, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x22, 0xbe, 0x04,
	0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x69, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x74,
	0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x58, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x58, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x59, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x59, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x58, 0x4d, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x58, 0x4d, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x59, 0x4d, 0x6f, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x59, 0x4d, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x58, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x58,
	0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x59, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x59, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x57, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x57, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x48, 0x2a, 0xea,
	0x02, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x49, 0x47,
	0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x02, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x49, 0x47, 0x4e, 0x41,
	0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x04,
	0x12, 0x17, 0x0a, 0x13, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x49, 0x47,
	0x4e, 0x41, 0x4c, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x06,
	0x12, 0x21, 0x0a, 0x1d, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x5f, 0x4f, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x42, 0x52,
	0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x08, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x50, 0x55, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x10, 0x09, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x47,
	0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x5f,
	0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c,
	0x5f, 0x43, 0x4f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43,
	0x48, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x43, 0x4f,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x54, 0x54, 0x41, 0x43,
	0x48, 0x10, 0x0c, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x4d, 0x4f,
	0x56, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x53, 0x4f, 0x52, 0x10, 0x0d, 0x2a, 0xe8, 0x01, 0x0a, 0x06,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54,
	0x5f, 0x4e, 0x4f, 0x54, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x41,
	0x52, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x53, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x45,
	0x4e, 0x44, 0x45, 0x4e, 0x43, 0x49, 0x45, 0x53, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x41,
	0x52, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x52, 0x41, 0x47, 0x5f, 0x53, 0x48, 0x41, 0x44, 0x4f, 0x57,
	0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x4f, 0x54,
	0x54, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x51, 0x55, 0x41, 0x52, 0x45, 0x10,
	0x04, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x50,
	0x4c, 0x41, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x41,
	0x52, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x53, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x54,
	0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x07,
	0x12, 0x11, 0x0a, 0x0d, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x55,
	0x52, 0x53, 0x4f, 0x52, 0x10, 0x09, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x77, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cursor_sync_proto_rawDescOnce sync.Once
	file_cursor_sync_proto_rawDescData = file_cursor_sync_proto_rawDesc
)

func file_cursor_sync_proto_rawDescGZIP() []byte {
	file_cursor_sync_proto_rawDescOnce.Do(func() {
		file_cursor_sync_proto_rawDescData = protoimpl.X.CompressGZIP(file_cursor_sync_proto_rawDescData)
	})
	return file_cursor_sync_proto_rawDescData
}

var file_cursor_sync_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cursor_sync_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_cursor_sync_proto_goTypes = []interface{}{
	(Signal)(0),              // 0: tutorial.Signal
	(Target)(0),              // 1: tutorial.Target
	(*MovingMessageBin)(nil), // 2: tutorial.MovingMessageBin
}
var file_cursor_sync_proto_depIdxs = []int32{
	0, // 0: tutorial.MovingMessageBin.signal:type_name -> tutorial.Signal
	1, // 1: tutorial.MovingMessageBin.target:type_name -> tutorial.Target
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cursor_sync_proto_init() }
func file_cursor_sync_proto_init() {
	if File_cursor_sync_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cursor_sync_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovingMessageBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cursor_sync_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cursor_sync_proto_goTypes,
		DependencyIndexes: file_cursor_sync_proto_depIdxs,
		EnumInfos:         file_cursor_sync_proto_enumTypes,
		MessageInfos:      file_cursor_sync_proto_msgTypes,
	}.Build()
	File_cursor_sync_proto = out.File
	file_cursor_sync_proto_rawDesc = nil
	file_cursor_sync_proto_goTypes = nil
	file_cursor_sync_proto_depIdxs = nil
}
